{"version":3,"sources":["Components/layout/SignedInLinks.js","Components/store/Actions/AuthActions.js","Components/layout/SignedOutLinks.js","Components/layout/Navbar.js","Components/Dashboard/Notifications.js","Components/projects/ProjectSummary.js","Components/projects/ProjectList.js","Components/Dashboard/DashBoard.js","Components/projects/ProjectDetails.js","Components/Auth/SignIn.js","Components/Auth/SignUp.js","Components/store/Actions/ProjectActions.js","Components/projects/CreateProject.js","App.js","serviceWorker.js","Components/store/reducers/authReducer.js","Components/store/reducers/ProjectReducer.js","Components/store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","state","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","SignedOutLinks","console","log","firebase","profile","links","uid","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","LastName","signUp","newUser","flag","getFirestore","createUserWithEmailAndPassword","resp","doc","set","lastName","initials","error","createProject","authorId","add","Date","CreateProject","history","push","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","ProjectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","presence","sessions","AuthIsLoaded","children","useSelector","isLoaded","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8b10da6a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux' ;\r\nimport { signOut } from '../store/Actions/AuthActions' ;\r\nimport  ProfileActions  from '../store/Actions/ProfileActions' ;\r\n\r\nconst SignedInLinks = (props) => {\r\n\r\n\r\n//  console.log(' in the signed links ' , props ) ;\r\n\r\n// ProfileActions(props.firebase.auth.uid) ;\r\n\r\n     \r\n  return (\r\n    <ul className=\"right\">\r\n      <li><NavLink to=\"/Create\"> New Project </NavLink></li>\r\n      <li><a onClick = {props.signOut}> Log out </a></li>\r\n      <li><NavLink to=\"/\" className = \"btn btn-floating pink lighten-1\" >{ `HS`}</NavLink></li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ( state ) => {\r\n//  console.log('is the part of map state to props ' , state) ;\r\n  return {\r\n    ...state\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut : () => dispatch( signOut() )\r\n  }\r\n}\r\n\r\nexport default connect( mapStateToProps, mapDispatchToProps)(SignedInLinks) ;\r\n\r\n//export default SignedInLinks;\r\n","import { getFirestore } from \"redux-firestore\";\r\n\r\nexport const signIn = ( credentials ) => {\r\n\r\n    return ( dispatch, getState , { getFirebase } ) => {\r\n\r\n        const firebase = getFirebase() ;\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email ,\r\n            credentials.password\r\n        ).then( () => {\r\n            dispatch( {type : 'LOGIN_SUCCESS'} ) ;\r\n        } ).catch( (err) => {\r\n            dispatch( {type : 'LOGIN_ERROR' , err } ) ;\r\n        } ) ;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const signOut = () => {\r\n\r\n    return ( dispatch , getState , { getFirebase } ) => {\r\n        const firebase = getFirebase() ;\r\n\r\n\r\n        firebase.auth().signOut().then( () => {\r\n            dispatch( { type : 'SIGNOUT_SUCCESS' } ) \r\n        } ) ;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n\r\n    console.log(' in the new user property' , newUser ) ;\r\n    let flag = false ;\r\n\r\n    return ( dispatch , getState , { getFirebase } ) => {\r\n        \r\n        const firebase = getFirebase() ;\r\n        const firestore = getFirestore() ;\r\n\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email ,\r\n            newUser.password\r\n        ).then( (resp) => {\r\n\r\n\r\n\r\n\r\n\r\n            return firestore.collection('users').doc( resp.user.uid ).set( {\r\n                firstName : newUser.firstName ,\r\n                lastName : newUser.lastName ,\r\n                initials : newUser.firstName[0]  + newUser.lastName[0]\r\n            } ).then(function() {\r\n                console.log(\"Document successfully written! yooo\");\r\n                flag = true ;\r\n\r\n\r\n            }).catch(function(error) {\r\n                console.error(\"Error writing document: \", error);\r\n            });\r\n\r\n    \r\n\r\n            return firestore.collection('users').doc( resp.user.uid ).set( {\r\n                firstName : newUser.firesName ,\r\n                lastName : newUser.lastName ,\r\n                initials : newUser.firesName[0] + newUser.lastName[0]\r\n            } )\r\n        } ).then( () => {\r\n            console.log('here i was storing the data in the users collection') ;\r\n\r\n             return dispatch( { type : 'SIGNUP_SUCCESS' } ) \r\n        } ).catch( (err) => {\r\n\r\n            if ( flag === true ){\r\n                return dispatch( { type : 'SIGNUP_SUCCESS' } )\r\n            }\r\n\r\n            return dispatch( { type : 'SIGNUP_ERROR' , err  } )\r\n        } )\r\n\r\n\r\n\r\n\r\n       \r\n    }\r\n}\r\n\r\n\r\n// export default signIn ;","import React from 'react' ;\r\nimport { NavLink } from 'react-router-dom' ;\r\n\r\nconst SignedOutLinks = () => {\r\n\r\n\r\n    return (\r\n\r\n        <ul className = \"right\" >\r\n\r\n           <li> <NavLink to = '/SignUp' >Sign up</NavLink> </li>\r\n           <li> <NavLink to = '/SignIn' >Login In</NavLink> </li>\r\n\r\n\r\n        </ul>\r\n\r\n\r\n\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default SignedOutLinks ;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\nimport { connect } from 'react-redux' ;\r\n\r\nconst Navbar = (props) => {\r\n\r\n  const { auth , profile } = props ;\r\n\r\n\r\n  const links = auth.uid ? <SignedInLinks />  :   <SignedOutLinks /> ;\r\n\r\n  \r\n\r\n\r\n  console.log( profile , 'profile here' ) ;\r\n\r\n\r\n  return (\r\n    <nav className=\"nav-wrapper purple darken-2\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"brand-logo\">\r\n          Mario Planner\r\n        </Link>\r\n          {/* <SignedInLinks />\r\n          <SignedOutLinks /> */}\r\n          { links }\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n  console.log(state) ;\r\n\r\n  return {\r\n    \r\n    auth : state.firebase.auth\r\n\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React, { Component } from 'react';\r\nimport moment from 'moment' ;\r\n\r\nconst Notifications = (props) => {\r\n\r\n  const { notifications } = props ;\r\n\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <div className = \"card-title\" >Notifications</div>\r\n          <ul className=\"notifications\">\r\n            {\r\n              notifications && notifications.map( item => {\r\n\r\n              return (\r\n\r\n                 <li key = {item.id} >\r\n                   <span className = \"pink-text\" > {item.user}  </span>\r\n                   <span> { item.content }</span>\r\n\r\n                 <div className = \"grey-text note-date\" >\r\n                     \r\n                  { moment( item.time.toDate() ).fromNow()  }\r\n\r\n                 </div>\r\n\r\n                 </li>\r\n\r\n\r\n              )\r\n\r\n              } )\r\n            }\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n","import React from 'react' ;\r\nimport ProjectList from './ProjectList';\r\nimport moment from 'moment' ;\r\n\r\nconst ProjectSummary = ({project}) => {\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"card z-depth-0 project-summary\">\r\n        <div className=\"card-content grey-text text-darken-3\">\r\n          <span className=\"card-title\">{project.title}</span>\r\n          <p>Posted by { project.authorFirstName } {project.authorLastName} </p>\r\n          <p className=\"grey-text\"> { moment(project.createdAt.toDate()).calendar() } </p>\r\n        </div>\r\n      </div>\r\n\r\n\r\n    )\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default ProjectSummary ;","import React, { Component } from 'react';\r\nimport ProjectSummary from './ProjectSummary' ;\r\nimport { Link } from 'react-router-dom' ;\r\n\r\nconst ProjectList = ( { projects } ) => {\r\n  return (\r\n    <div className=\"project-list section\">\r\n\r\n\r\n        { projects && projects.map( project => {\r\n\r\n          return (\r\n\r\n            <Link to = { '/project/' + project.id } key = {project.id}  >\r\n\r\n            <ProjectSummary project = {project}  />\r\n\r\n            </Link>\r\n\r\n\r\n          )\r\n\r\n        } ) }\r\n\r\n     \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectList;\r\n","import React, { Component } from 'react';\r\nimport Notifications from './Notifications';\r\nimport ProjectList from '../projects/ProjectList';\r\nimport {connect} from 'react-redux' ; \r\nimport { firestoreConnect } from 'react-redux-firebase' ;\r\nimport { compose } from  'redux' ;\r\nimport { firestore } from 'firebase';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Dashboard extends Component {\r\n  \r\n  render() {\r\n\r\n\r\n      const { projects , auth , notifications } = this.props ;\r\n\r\n\r\n      if( !auth.uid ) return <Redirect to = './signin' />  \r\n\r\n    return (\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            <ProjectList  projects = {projects} />\r\n          </div>\r\n          <div className=\"col s12 m5 offset-1\">\r\n            <Notifications notifications = {notifications} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n \r\n    \r\n  return {\r\n    projects :  state.firestore.ordered.projects ,\r\n    auth : state.firebase.auth ,\r\n    notifications : state.firestore.ordered.notifications\r\n  }\r\n\r\n}\r\n\r\nexport default \r\ncompose( \r\n  connect(mapStateToProps) , firestoreConnect([\r\n    { collection : 'projects' , orderBy: [ 'createdAt' , 'desc' ] } ,\r\n    { collection : 'notifications' , limit : 3 , orderBy: [ 'time' , 'desc' ]  }\r\n  ])  )(Dashboard) ; \r\n// connect(mapStateToProps)(Dashboard) ;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux' ;\r\nimport { firestoreConnect } from 'react-redux-firebase' ;\r\nimport { compose } from 'redux' ;\r\nimport { Redirect } from 'react-router-dom';\r\nimport  moment  from 'moment' ;\r\n\r\n\r\nconst ProjectDetails = (props) => {\r\n\r\n    const id = props.match.params.id ;  \r\n     const {  project , auth } = props ;\r\n\r\n     if ( !auth.uid ) {  \r\n       console.log( ' not authenticated in the project details' ) ;\r\n       return <Redirect to = '/signin' /> \r\n    }\r\n\r\n    console.log( '  authenticated in the project details' ) ;\r\n \r\n\r\n\r\n     if ( project ){\r\n\r\n      return (\r\n\r\n        <div className=\"container section project-details\">\r\n        <div className=\"card z-depth-0\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">Project Title { project.title  }   </span>\r\n            <p>\r\n               { project.content }\r\n            </p>\r\n          </div>\r\n          <div className=\"card-action grey lighten-4\">\r\n            <div> Posted by , { project.authorFirstName } { project.authorLastName } </div>\r\n  \r\n            <div> { moment(project.createdAt.toDate()).calendar() } </div>\r\n          </div>\r\n          \r\n        </div>\r\n      </div>\r\n  \r\n      )\r\n\r\n\r\n     } else {\r\n      return (\r\n   \r\n            <div className = \"container\" >\r\n\r\n                <h5> Loading Content , Please Wait... </h5>\r\n\r\n            </div>\r\n\r\n        );\r\n\r\n     }\r\n\r\n \r\n}\r\n\r\nconst mapStateToProps = ( state , ownProps ) => {\r\n\r\n  const id = ownProps.match.params.id ;\r\n  const projects = state.firestore.data.projects ;\r\n  const project = projects ? projects[id] : null \r\n  return {\r\n    project : project ,\r\n    auth : state.firebase.auth \r\n  }\r\n\r\n}\r\n\r\nexport default compose( connect(mapStateToProps) , firestoreConnect( [{ collection : 'projects'     }] ) )(ProjectDetails);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux' ;\r\nimport { signIn } from '../store/Actions/AuthActions' ;\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nexport class SignIn extends Component {\r\n\r\n    state = {\r\n        email : '' ,\r\n        password : ''\r\n    }\r\n  handleChange = (e) => {\r\n     \r\n    this.setState({\r\n        [e.target.id] : e.target.value \r\n    })\r\n\r\n\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault() ;\r\n     this.props.signIn(this.state) ;\r\n  \r\n\r\n  };\r\n\r\n  render() {\r\n\r\n    const { authError , auth } = this.props ;\r\n\r\n    if (auth.uid ) return<Redirect to ='/' />\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5>Sign In</h5>\r\n\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange}></input>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange}></input>\r\n          </div>\r\n\r\n\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink z-depth-0 lighten-1\">Login</button>\r\n          </div>\r\n\r\n           <div className = \"red-text center\" >\r\n             { authError ? <p> { authError } </p> : null  } \r\n           </div>\r\n\r\n\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n  return {\r\n    authError : state.auth.authError ,\r\n    auth : state.firebase.auth\r\n  }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\r\n  \r\n  return {\r\n     signIn : ( creds ) => dispatch(signIn(creds))\r\n  }\r\n\r\n}\r\n\r\nexport default  connect( mapStateToProps, mapDispatchToProps )(SignIn) ;\r\n\r\n// export default SignIn ;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux' ;\r\nimport { Redirect } from 'react-router-dom';\r\nimport { signUp } from '../store/Actions/AuthActions' ;\r\nexport class SignUp extends Component {\r\n\r\n    state = {\r\n        email : '' ,\r\n        password : '' ,\r\n        firstName : '' ,\r\n        LastName : ''\r\n    }\r\n  handleChange = (e) => {\r\n    \r\n    this.setState({\r\n        [e.target.id] : e.target.value \r\n    })  \r\n\r\n\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault() ;\r\n    this.props.signUp( this.state ) ;\r\n\r\n  };\r\n\r\n  render() {\r\n\r\n    const { auth , authError  } = this.props ;\r\n\r\n\r\n\r\n    if ( auth.uid ) {\r\n      return <Redirect to = '/' />\r\n    }\r\n\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5>Sign Up</h5>\r\n\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange}></input>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange}></input>\r\n          </div>\r\n\r\n          <div className = \"input-field\" >\r\n              <label htmlFor=\"firstName\" >First Name</label>\r\n              <input type= \"text\" id = \"firstName\" onChange = { this.handleChange } />\r\n          </div>\r\n\r\n          <div className = \"input-field\" >\r\n              <label htmlFor=\"LastName\" >Last Name</label>\r\n              <input type= \"text\" id = \"lastName\" onChange = { this.handleChange } />\r\n          </div>\r\n\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink z-depth-0 lighten-1\">Sign Up</button>\r\n          </div>\r\n\r\n          <div className = 'red-text center' >\r\n            { authError ? <p> { authError } </p> : null  }\r\n          </div>\r\n\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = ( state ) => {\r\n\r\n  return {\r\n    auth : state.firebase.auth,\r\n    authError : state.auth.authError \r\n  }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signUp : (newUser) => dispatch(signUp(newUser))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps , mapDispatchToProps )( SignUp);\r\n","\r\n\r\n\r\nconst createProject = (project) => {\r\n    return ( dispatch , getState , { getFirebase  , getFirestore } ) => {     // get Firestore was also added\r\n\r\n\r\n        const firestore = getFirestore() ;\r\n        const profile = getState().firebase.profile ;\r\n        const authorId = getState().firebase.auth.uid ;\r\n\r\n\r\n        const sate = getState() ;\r\n\r\n   //     console.log( 'This is the part of getState fddddddddddddddddddddddddddddddddddddddddddddd' , sate ) ;\r\n\r\n\r\n        firestore.collection('projects').add({ \r\n            ...project ,\r\n           authorFirstName : 'abc' ,\r\n           authorLastName : '123' ,\r\n           authorId : authorId ,\r\n           createdAt : new Date() \r\n        }).then( () =>{\r\n         //   console.log(' error is caught in creating the project 1'  ) ;\r\n            dispatch( { type : 'CREATE_PROJECT'  } ) ;\r\n        } ).catch( (err) => {\r\n         //   console.log(' error is caught in creating the project 2') ;\r\n            dispatch( {type : 'CREATE_PROJECT_ERROR'  } ,err ) ;\r\n        } ) ;\r\n\r\n \r\n        \r\n    }\r\n}\r\n\r\nexport default createProject ;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux' ;\r\nimport createProject from '../store/Actions/ProjectActions' ;\r\nimport thunk from 'redux-thunk';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport class CreateProject extends Component {\r\n\r\n    state = {\r\n        title : '' ,\r\n        content : ''\r\n    }\r\n  handleChange = (e) => {\r\n    \r\n    this.setState({\r\n        [e.target.id] : e.target.value \r\n    })\r\n\r\n\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault() ;\r\n\r\n    console.log( this.state ) ;\r\n    // console.log( this.props ) ;\r\n    this.props.createProject(this.state) ;\r\n    this.props.history.push('/') ;\r\n\r\n  };\r\n\r\n  render() {\r\n\r\n    const { auth } = this.props ;\r\n\r\n    if ( !auth.uid ) {  \r\n      return <Redirect to = '/signin' /> \r\n     }\r\n\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5>Create New Project</h5>\r\n\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"title\">Title</label>\r\n            <input type=\"text\" id=\"title\" onChange={this.handleChange}></input>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"content\">Content</label>\r\n            <textarea id = \"content\" className = \"materialize-textarea\" onChange={this.handleChange} ></textarea>\r\n          </div>\r\n\r\n\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink z-depth-0 lighten-1\">Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ( state ) => {\r\n  return {\r\n    auth : state.firebase.auth \r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = ( dispatch ) => {\r\n  return {\r\n    createProject : (project) => {\r\n      dispatch( createProject(project) )\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(  mapStateToProps , mapDispatchToProps) (CreateProject) ;\r\n","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './Components/layout/Navbar';\nimport Dashboard from './Components/Dashboard/DashBoard';\nimport ProjectDetails from './Components/projects/ProjectDetails';\nimport SignIn from './Components/Auth/SignIn' ;\nimport SignUp from './Components/Auth/SignUp' ;\nimport CreateProject from './Components/projects/CreateProject';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <div className=\"app\">\n          <Navbar />\n          <Switch>\n            <Route exact path='/' component={Dashboard} />\n            <Route path='/project/:id' component={ProjectDetails} />\n            <Route path = '/SignIn' component = {SignIn} />\n            <Route path = '/SignUp' component = {SignUp} />\n            <Route path = '/Create' component = {CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n  authError : null\r\n};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n\r\n  switch( action.type ){\r\n\r\n    case 'LOGIN_ERROR' :\r\n      console.log('login error') ;\r\n      return {\r\n        ...state ,\r\n        authError : 'login failed'\r\n      }\r\n    case 'LOGIN_SUCCESS' :\r\n      console.log('login success') ;\r\n      return {\r\n        ...state ,\r\n        authError : null\r\n      }  \r\n      \r\n    case  'SIGNUP_SUCCESS' :\r\n       console.log( 'sign up success' ) ;\r\n       return {\r\n         ...state ,\r\n         authError : null  \r\n       } ;\r\n    \r\n    case 'SIGNUP_ERROR' :\r\n       console.log( 'sign out error' , action.err.message ) ;\r\n       return {\r\n         ...state ,\r\n         authError : action.err.message \r\n       } ;\r\n\r\n    default :\r\n      return state ;  \r\n\r\n\r\n  }\r\n\r\n};\r\n\r\nexport default authReducer;\r\n","const initState = {\r\n  projects: [\r\n    { id: '1', title: 'help me find peach', content: 'blah blah blah' },\r\n    { id: '2', title: 'collect all the stars', content: 'blah blah blah' },\r\n    { id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah' },\r\n  ],\r\n};\r\n\r\nconst ProjectReducer = (state = initState, action) => {\r\n\r\n\r\n\r\n  switch ( action.type ) {\r\n    case 'CREATE_PROJECT' :\r\n      console.log( 'created project' , action.project ) ;\r\n      return state ;\r\n    case 'CREATE_PROJECT_ERROR' :\r\n      console.log( 'create project error' , action.err ) ;\r\n      return state ;\r\n    default : \r\n      return state ;   \r\n  }\r\n\r\n  \r\n};\r\n\r\nexport default ProjectReducer;\r\n","import authReducer from './authReducer' ;\r\nimport ProjectReducer from './ProjectReducer' ;\r\nimport { combineReducers } from 'redux' ;\r\nimport { firestoreReducer } from 'redux-firestore' \r\nimport { firebaseReducer } from 'react-redux-firebase' ;\r\n\r\n\r\nconst rootReducer = combineReducers( {\r\n    auth : authReducer ,\r\n    project : ProjectReducer ,\r\n    firestore : firestoreReducer ,\r\n    firebase : firebaseReducer\r\n} )\r\n\r\nexport default rootReducer ;","import firebase from 'firebase/app' ;\r\nimport 'firebase/firestore' ;\r\nimport 'firebase/auth' ;\r\n\r\n\r\n// Initialize firebase\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDA5RXezNNPONd409WOHu4K3IRHLNA89Z4\",\r\n    authDomain: \"hrithik-mario-plan.firebaseapp.com\",\r\n    databaseURL: \"https://hrithik-mario-plan.firebaseio.com\",\r\n    projectId: \"hrithik-mario-plan\",\r\n    storageBucket: \"hrithik-mario-plan.appspot.com\",\r\n    messagingSenderId: \"999611631447\",\r\n    appId: \"1:999611631447:web:3f1ff1b19dfaf18216e012\",\r\n    measurementId: \"G-DCJQDNTNPM\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n // firebase.analytics();\r\n\r\n  export default firebase ;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './Components/store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore, createFirestoreInstance } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase , ReactReduxFirebaseProvider } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig' ;\nimport firebase from 'firebase/app' ;\nimport  {useSelector}   from 'react-redux'\nimport { isLoaded  } from 'react-redux-firebase' ;\n\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore( firebase , fbConfig )   \n  )\n);\n// , { useFirestoreForProfile :true , userProfile : 'users' , attachAuthIsReady : true  } \n\nconst rrfConfig = {\n  userProfile: 'users',\n  useFirestoreForProfile: true\n}\n\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance,\n  presence: 'presence',\n  sessions: 'sessions'\n}\n\n// for some reasons use selector is not working\n\nfunction AuthIsLoaded({ children }) {\n\n\n\n  const auth = useSelector(state =>  state.firebase.auth )\n   \n  if (!isLoaded(auth)) return <div className=\"center\"> <p>Loading Mario Plan...</p></div>;\n  return children ; \n \n\n}\n\n\n\nReactDOM.render(\n  <Provider store={store}>\n<ReactReduxFirebaseProvider {...rrfProps}>  \n   <AuthIsLoaded>\n      <App />\n   </AuthIsLoaded>\n\n</ReactReduxFirebaseProvider>\n</Provider>,\ndocument.getElementById('root'));\n\nserviceWorker.unregister();\n        \n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n\n\n\n"],"sourceRoot":""}